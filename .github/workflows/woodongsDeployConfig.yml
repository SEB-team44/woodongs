# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle


name: Woodongs-cdci-test

## setupdone
## test1
on:
  push:
    branches: [ "be-production" ]
  pull_request:
    branches: [ "be-production" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: mainproject-bucket
  CODE_DEPLOY_APPLICATION_NAME: woodongs-deploy-be
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: woodongs-deploy-be-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
#    permissions:
#      contents: read
#      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: make application-sensitive.yml
        run: |
            # create application-sensitive.yml
            cd ./src/main/resources

            # application-sensitive.yml 파일 생성
            touch ./application-sensitive.yml

            # GitHub-Actions 에서 설정한 값을 application-sensitive.yml 파일에 쓰기
            echo "${{ secrets.SENSITIVE }}" >> ./application-sensitive.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./server

      - name: Build with Gradle
        run: ./gradlew build -x test
        working-directory: ./server

        #uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        #with:
        #  arguments: clean build

      # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (5) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip