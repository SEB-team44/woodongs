# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: BE AWS CI/CD

on:
  push:
    branches: [ "be-production" ]
  pull_request:
    branches: [ "be-production" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
          #      with:
          #        arguments: build

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

        #BUILD
      - name: Build with Gradle
        run: ./gradlew clean build

        #CREATE DIR
      - name: Make Directory for deliver
        run: mkdir deploy

        #COPY .JAR
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

#  nonstop - try later       
#        #COPY appspec.yml
#      - name: Copy appspec
#        run: cp ./appspec.yml ./deploy/
#        
#        #COPY SCRIPTS
#      - name: Copy shell
#        run: cp ./scripts/* ./deploy/

        #CREATE ZIP FOR TRANSFER
      - name: Make zip file
        run: zip -r -qq -j ./woodongs-be.zip ./deploy

        #COPY TO S3
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \ ./woodongs-be.zip s3://mainproject-deploy

        #DEPLOY
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name woodongs-deploy-be \
          --deployment-group-name woodongs-deploy-be-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=mainproject-deploy,bundleType=zip,key=woodongs-be.zip \
          --region ap-northeast-2
